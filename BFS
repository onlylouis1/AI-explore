#include<iostream>
#include<fstream>
#include<string.h>
#include<time.h>
using namespace std;
#define N 3
# define MAX 10000
ifstream fin("in.text");
ofstream fout("8 number game.text");
typedef int STATE[N*N];
STATE st[MAX],goal; 
const int dx[]={-1,1,0,0};
const int dy[]={0,0,-1,1};
int iv[MAX],n=0;
int di[MAX];
int far[MAX];
int first=1,rear=2;

int try(){
	int i,cont=0;
	for(i=0;i<N*N;i++)cont=cont*10+st[rear][i];
	for(i=0;i<=n;i++)
	if(iv[i]==cont)return 0;
	
	if(i>n){[++n]=cont;//cout<<n<<" "; 
	return 1;}
} 

int bfs(){
	int z,d,z1,x,y,x1,y1;
	while(first<rear){
					  //for(int i=0;i<N*N;i++)fout<<st[first][i]<<" ";fout<<first<<endl; 
					  if(memcmp(&st[first],&goal,sizeof(goal))==0)return first;  
					  //error s=st[first];
					  STATE &s=st[first];
					  for(z=0;z<N*N;z++)if(s[z]==0)break;
					  x=z/N;y=z%N;
					  
					  for(d=0;d<4;d++){
					  				   x1=x+dx[d];y1=y+dy[d];
					  				   if(x1>=0&&x1<N&&y1>=0&&y1<N){
									   z1=x1*3+y1;
					  				   memcpy(&st[rear],&s,sizeof(s));
						 			   st[rear][z]=s[z1];st[rear][z1]=0;
						 			   di[rear]=dist[first]+1;
						 			   far[rear]=first;
						 			   //if(memcmp(&st[rear],&goal,sizeof(goal))==0)return rear;  
									   if(try())rear++;
										}
										
										}
					first++;		
					}
	return -1;
}	

int main(){
	clock_t start,end;
	double duration;
	start=clock();
	int i,j;
	//STATE goal;
	memset(vis,0,sizeof(vis));
	int cont=0;
	cout<<N<<"*"<<N<<"求解"<<endl; 
	while(1){
	cout<<"输入目标序列："<<endl; 
	for(i=0;i<N*N;i++){cin>>st[1][i];cont=10*cont+st[1][i];}
	cout<<"输入初始序列："<<endl; 
	for(i=0;i<N*N;i++)cin>>goal[i];
	vis[n]=cont;
	di[1]=0;
	far[1]=0;
	int ans=bfs();
	
	if(ans<0)fout<<-1;
	else{
	cout<<dist[ans]<<endl;
	cout<<"最优为："<<endl; 
	for(i=first;i>0;i=far[i]){
							  for(j=0;j<N*N;j++){
							  					 if(st[i][j]==0)cout<<"  ";
												   else cout<<st[i][j]<<" ";
												   if(j%N==N-1)cout<<endl;
												   }
							  cout<<endl;
							  }
							  }
	end=clock();
	duration = (double)(end - start) / CLOCKS_PER_SEC; 						  
	cout<<endl<<duration<<" seconds"<<endl<<endl;
	}  
return 0;
}    
